{"id":799521105,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663149438,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/799521105/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n      // method (2) fast and slow pointer \n        ListNode*slow=head,*fast=head->next;\n        while(fast->next && fast->next->next){\n            fast=fast->next->next;\n            slow=slow->next;\n        }\n        return slow->next; \n    }\n};","compare_result":"110000000000000000000000000000000000","title_slug":"middle-of-the-linked-list","has_notes":false,"notes":"","topic_tags":[]}