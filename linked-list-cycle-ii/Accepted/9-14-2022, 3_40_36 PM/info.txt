{"id":799527480,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663150236,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/799527480/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"10 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        map<ListNode *,bool>mp;\n        ListNode *curr=head;\n        while(curr && mp[curr]==0){\n            mp[curr]=1;\n            curr=curr->next;\n        }\n        // if(!curr)return curr;\n        return curr;\n    }\n};","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"notes":"","topic_tags":[]}