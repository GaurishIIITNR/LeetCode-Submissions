{"id":799530906,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663150667,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/799530906/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"7.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        \n        ListNode *curr=head;\n        while(curr && curr->val<=100000){\n            curr->val=100002;\n            curr=curr->next;\n        }\n        // if(!curr)return curr;\n        return curr;\n    }\n};","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"notes":"","topic_tags":[]}