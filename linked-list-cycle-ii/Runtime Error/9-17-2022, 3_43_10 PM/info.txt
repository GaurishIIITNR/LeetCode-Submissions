{"id":801902995,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663409590,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/801902995/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        \n         // agr koi two person start with same point with diff. speeds \n        // they always meet at same point where they started in loop.\n        ListNode *curr=head,*fast=head;\n        if(!(curr->next))return NULL;\n        if(fast->next==NULL || fast->next->next==NULL)return NULL;\n        fast=fast->next->next;curr=curr->next;\n        bool flag=0;\n        while(fast->next && fast->next->next){\n            if(fast==curr){\n                flag=1;\n                break;\n            }\n            fast=fast->next->next;\n            curr=curr->next;    \n        }if(!flag)return NULL;\n        curr=head;\n        while(fast!=curr){\n            fast=fast->next;\n            curr=curr->next;\n        } return curr;\n    }\n};","compare_result":"1110000000000000","title_slug":"linked-list-cycle-ii","has_notes":false,"notes":"","topic_tags":[]}