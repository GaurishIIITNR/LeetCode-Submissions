{"id":801266677,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663334403,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/801266677/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nodesBetweenCriticalPoints(ListNode* head) {\n        ListNode* prev=head,*curr;\n        if(prev->next) curr=head->next;\n        int cnt=2;\n        vector<int>v;\n        while(curr->next){\n        if((prev->val)>(curr->val) && (curr->next->val)>(curr->val))\n                v.push_back(cnt);\n        else if((prev->val)<(curr->val) && (curr->next->val)<(curr->val))\n              v.push_back(cnt);\n            cnt++;\n            curr=curr->next;\n            prev=prev->next;\n        }\n        if(v.size()<2)return {-1,-1};\n        return {(v[v.size()-1]-v[v.size()-2]),(v[v.size()-1]-v[0])};\n    }\n};","compare_result":"1111111111110111110101111111101111111100101011111100011010111000001011111011101001101011011000100001011011111100110111111111111011111011111","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points","has_notes":false,"notes":"","topic_tags":[]}