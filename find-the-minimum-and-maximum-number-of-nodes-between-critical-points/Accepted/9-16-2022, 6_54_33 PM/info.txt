{"id":801269043,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663334673,"status":10,"status_display":"Accepted","runtime":"557 ms","url":"/submissions/detail/801269043/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"117.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nodesBetweenCriticalPoints(ListNode* head) {\n        ListNode* prev=head,*curr;\n        if(prev->next) curr=head->next;\n        int cnt=2;\n        vector<int>v;\n        while(curr->next){\n        if((prev->val)>(curr->val) && (curr->next->val)>(curr->val))\n                v.push_back(cnt);\n        else if((prev->val)<(curr->val) && (curr->next->val)<(curr->val))\n              v.push_back(cnt);\n            cnt++;\n            curr=curr->next;\n            prev=prev->next;\n        }\n        if(v.size()<2)return {-1,-1};\n        int mn=INT_MAX;\n        for(int i=1;i<v.size();i++){\n            mn=min(mn,(v[i]-v[i-1]));\n        }\n        return {mn,(v[v.size()-1]-v[0])};\n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points","has_notes":false,"notes":"","topic_tags":[]}