{"id":803990081,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663623842,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/803990081/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* Head=NULL,*Tail=NULL;\n    void f(ListNode* head){\n        if(!head)return;\n        f(head->next);\n        if(!Tail){\n            Tail=Head=head;\n        }else {\n           Tail->next=head;\n           Tail=Tail->next;\n        } \n        head->next=NULL;\n    }\n    ListNode* reverseList(ListNode* head) {\n          f(head);\n        return Head;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"notes":"","topic_tags":[]}