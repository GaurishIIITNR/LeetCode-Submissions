{"id":803960898,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1663620463,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/803960898/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n       ListNode* res_head=NULL,*curr=head,*tmp;\n        while(curr){\n            // temp is next pointer \n            tmp=curr->next;\n            \n            curr->next=res_head;\n            res_head=curr;\n            \n            curr=tmp;\n            \n        }\n        return res_head;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"notes":"","topic_tags":[]}